{"version":3,"file":"static/js/movies-page.6f4b0138.chunk.js","mappings":"oLACA,EAAuB,2BAAvB,EAA2D,6BAA3D,EAA+F,2BAA/F,EAAiI,2B,SCGlH,SAASA,EAAT,GAAmC,IAAXC,EAAU,EAAVA,OACrC,OACE,iCACE,eAAIC,UAAWC,EAAf,6BACA,eAAID,UAAWC,EAAf,SACGF,EAAOG,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,GAC7B,OACE,eAAIJ,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAQI,GAAE,kBAAaD,GAAxC,SACGD,KAFuBC,a,sHCVxC,EAAuB,wBAAvB,EAA4D,8BAA5D,EAAgG,uBAAhG,EAA+H,yB,SCIhH,SAASE,EAAT,GAAsC,IAAjBC,EAAgB,EAAhBA,aAClC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,gBAAKV,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAcU,SAXd,SAAAC,GAEnB,GADAA,EAAMC,iBACe,KAAjBJ,EAAMK,OACR,OAAOC,EAAAA,GAAAA,MAAY,oCAErBR,EAAaE,EAAMK,OAAOE,eAC1BN,EAAS,KAKP,WACE,kBACEV,UAAWC,EACXgB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOZ,EACPa,SAAU,SAAAV,GAAK,OAAIF,EAASE,EAAMW,cAAcF,WAElD,mBAAQrB,UAAWC,EAAOgB,KAAK,SAA/B,yB,wBCvBO,SAASO,EAAWC,GACjC,OAA4BjB,EAAAA,EAAAA,UAAS,MAArC,eAAOT,EAAP,KAAe2B,EAAf,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAEMC,GAAaC,EAAAA,EAAAA,MACbC,EAAUH,EAAaI,IAAI,YAEjCC,EAAAA,EAAAA,YAAU,WACHF,IAGLG,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAAAC,GAAO,OAAIV,EAAUU,QACpD,CAACL,IAQJ,OACE,6BACE,SAACzB,EAAD,CAAWC,aARI,SAAA8B,GACbN,IAAYM,GACdR,EAAW,CAAES,OAAO,WAAD,OAAaD,QAO/BtC,GAAUA,EAAOwC,OAAS,IAAK,SAACzC,EAAA,EAAD,CAAcC,OAAQA,IACrDA,GAA4B,IAAlBA,EAAOwC,SAChB,qE,6KC7BFC,EAAU,mCACVC,EAAM,gCAEL,SAASC,IACd,OAAOC,GAAAA,CAAM,GAAD,OAAIF,EAAJ,sCAAqCD,IAAWL,MAC1D,SAAAC,GAAO,OAAIA,EAAQQ,KAAKR,WAIrB,SAASS,EAAkBzC,GAChC,OAAOuC,GAAAA,CAAM,GAAD,OAAIF,EAAJ,iBAAgBrC,EAAhB,oBAA8BoC,EAA9B,oBAAwDL,MAClE,SAAAC,GAAO,OAAIA,EAAQQ,QAIhB,SAASE,EAAe1C,GAC7B,OAAOuC,GAAAA,CAAM,GAAD,OACPF,EADO,iBACKrC,EADL,4BAC2BoC,EAD3B,oBAEVL,MAAK,SAAAC,GAAO,OAAIA,EAAQQ,KAAKG,QAG1B,SAASC,EAAkB5C,GAChC,OAAOuC,GAAAA,CAAM,GAAD,OACPF,EADO,iBACKrC,EADL,4BAC2BoC,EAD3B,2BAEVL,MAAK,SAAAC,GAAO,OAAIA,EAAQQ,KAAKR,WAG1B,IAAMF,EAAoB,SAAAH,GAC/B,OAAOY,GAAAA,CAAM,GAAD,OACPF,EADO,gCACoBD,EADpB,iCACoDT,IAC9DI,MAAK,SAAAC,GAAO,OAAIA,EAAQQ,KAAKR","sources":["webpack://react-homework-template/./src/components/TrendingList/TrendingList.module.css?033c","components/TrendingList/TrendingList.js","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.js","pages/MoviesPage.js","requests/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TrendingList_list__7xRuf\",\"tittle\":\"TrendingList_tittle__Vrit2\",\"item\":\"TrendingList_item__mbDYf\",\"link\":\"TrendingList_link__dzam0\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './TrendingList.module.css';\n\nexport default function TrendingList({ movies }) {\n  return (\n    <>\n      <h1 className={s.tittle}>Trending today</h1>\n      <ul className={s.list}>\n        {movies.map(({ original_title, id }) => {\n          return (\n            <li className={s.item} key={id}>\n              <Link className={s.link} to={`/movies/${id}`}>\n                {original_title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nTrendingList.propTypes = {\n  movies: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        original_title: PropTypes.string.isRequired,\n      })\n    ),\n    PropTypes.array,\n  ]).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"SearchBar_wrap__ibg5J\",\"searchForm\":\"SearchBar_searchForm__V6XO6\",\"btn\":\"SearchBar_btn__PKGSc\",\"input\":\"SearchBar_input__bIy50\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './SearchBar.module.css';\n\nexport default function SearchBar({ onGetRequest }) {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (input.trim() === '') {\n      return toast.error('search cannot be an empty string');\n    }\n    onGetRequest(input.trim().toLowerCase());\n    setInput('');\n  };\n\n  return (\n    <div className={s.wrap}>\n      <form className={s.searchForm} onSubmit={handleSubmit}>\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={input}\n          onChange={event => setInput(event.currentTarget.value)}\n        ></input>\n        <button className={s.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n}\n\nSearchBar.propTypes = {\n  onGetRequest: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport { fetchMoviesSearch } from '../requests/fetchAPI';\nimport TrendingList from '../components/TrendingList/TrendingList';\n\nexport default function MoviesPage(params) {\n  const [movies, setMovies] = useState(null);\n  const [searchParams] = useSearchParams();\n\n  const navigation = useNavigate();\n  const request = searchParams.get('request');\n\n  useEffect(() => {\n    if (!request) {\n      return;\n    }\n    fetchMoviesSearch(request).then(results => setMovies(results));\n  }, [request]);\n\n  const addRequest = newRequest => {\n    if (request !== newRequest) {\n      navigation({ search: `request=${newRequest}` });\n    }\n  };\n\n  return (\n    <main>\n      <SearchBar onGetRequest={addRequest} />\n      {movies && movies.length > 0 && <TrendingList movies={movies} />}\n      {movies && movies.length === 0 && (\n        <p>The search has not given any results</p>\n      )}\n    </main>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '164eadb7baae3a4c5cb507a1aca52aae';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport function fetchTrendingMovieDay() {\n  return axios(`${URL}trending/movie/day?api_key=${API_KEY}`).then(\n    results => results.data.results\n  );\n}\n\nexport function fetchMovieDetails(id) {\n  return axios(`${URL}movie/${id}?api_key=${API_KEY}&language=en-US`).then(\n    results => results.data\n  );\n}\n\nexport function fetchMovieCast(id) {\n  return axios(\n    `${URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(results => results.data.cast);\n}\n\nexport function fetchMovieReviews(id) {\n  return axios(\n    `${URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(results => results.data.results);\n}\n\nexport const fetchMoviesSearch = request => {\n  return axios(\n    `${URL}search/movie?api_key=${API_KEY}&language=en-US&query=${request}`\n  ).then(results => results.data.results);\n};\n"],"names":["TrendingList","movies","className","s","map","original_title","id","to","SearchBar","onGetRequest","useState","input","setInput","onSubmit","event","preventDefault","trim","toast","toLowerCase","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","MoviesPage","params","setMovies","useSearchParams","searchParams","navigation","useNavigate","request","get","useEffect","fetchMoviesSearch","then","results","newRequest","search","length","API_KEY","URL","fetchTrendingMovieDay","axios","data","fetchMovieDetails","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}